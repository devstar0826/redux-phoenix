{"version":3,"file":"redux-phoenix.js","sources":["../src/reduxPhoenix.js"],"sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nexport const REHYDRATE = '@@REHYDRATE';\n\n/**\n * transform state according to passed transformation\n *\n * @param {object} map transformation\n * @param {object} state State from redux\n * @return {object} Transformed state\n */\nfunction transform(map, state) {\n  const result = {};\n  _.forEach(map, (value, key) => {\n    if (typeof value === 'function') {\n      const transformation = value(key, _.get(state, key), state);\n      if (transformation.targetKey && _.has(transformation, 'targetValue')) {\n        _.set(result, transformation.targetKey, transformation.targetValue);\n      }\n      if (_.has(transformation, 'sourceValue')) {\n        _.set(result, key, transformation.sourceValue);\n      }\n    } else {\n      _.set(result, value, _.get(state, key));\n    }\n  });\n  return _.merge({}, state, result);\n}\n\n/**\n * get number of migrations that have been previously applied\n *\n * @param {array} appliedMigrations names of migrations that has been succesfully applied\n * @param {*} migrationsToApply list of migrations that should be run\n * @return {number} number of migrations that have been previously applied\n */\nfunction getNumberOfAppliedMigrations(appliedMigrations, migrationsToApply) {\n  const { index } = appliedMigrations.reduce((result, migrationName, index) => {\n    if (result.isDifferent) {\n      return result;\n    }\n    if (migrationsToApply[index] && migrationsToApply[index].name === migrationName) {\n      return { index: result.index + 1, isDifferent: false };\n    }\n    return { index: result.index, isDifferent: true };\n  }, { index: 0, isDifferent: false });\n\n  return index;\n}\n\n/**\n * get functions from migrations list that should be run before rehydrating\n *\n * @param {array} appliedMigrations names of migrations that has been succesfully applied\n * @param {array} migrations list of migrations that should be run on old versions of state\n * @return {array} array of functions from migrations that should be run\n */\nexport function getMigrationsToRun(appliedMigrations = [], migrations) {\n  const migrationsToApply = migrations.filter(migration => migration.up && migration.name);\n\n  const numberOfAppliedMigrations = getNumberOfAppliedMigrations(appliedMigrations, migrationsToApply);\n\n  const migrationsToRevert = appliedMigrations\n    .slice(numberOfAppliedMigrations)\n    .reverse()\n    .map(migrationName => migrations.find(({ name }) => name === migrationName) || {})\n    .filter(migration => migration.down && migration.name)\n    .map(migration => migration.down);\n\n  const migrationsToRun = migrationsToApply\n    .slice(numberOfAppliedMigrations)\n    .map(migration => migration.up);\n\n  return migrationsToRevert.concat(migrationsToRun);\n}\n\n/**\n * Persist store\n *\n * @export\n * @param {object} store Redux Store\n * @param {object} config Configuration object\n * @return {Promise<object>} Persisted Store\n */\nexport default function persistStore(store, {\n  key = 'redux',\n  whitelist = null,\n  blacklist = null,\n  storage = window.localStorage,\n  expireDate = null,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  map = {},\n  disabled = false,\n  throttle = 0,\n  migrations = null,\n} = {}) {\n  return Promise.resolve(storage.getItem(key)).then(persistedJson => {\n    if (disabled) {\n      return store;\n    }\n    const persistedValue = deserialize(persistedJson);\n    const { persistedState, saveDate, migrations: appliedMigrations } = persistedValue || {};\n    let state = persistedState;\n    if (expireDate && moment(saveDate).add(...expireDate).isBefore(moment())) {\n      state = null;\n    }\n\n    if (state && migrations) {\n      const migrationsToRun = getMigrationsToRun(appliedMigrations, migrations);\n      state = migrationsToRun.reduce((state, migration) => migration(state), state);\n    }\n\n    const persistedStateToMerge = whitelist\n      ? _.omit(_.pick(state, whitelist), blacklist)\n      : _.omit(state, blacklist);\n\n    store.dispatch({\n      type: REHYDRATE,\n      payload: persistedStateToMerge,\n    });\n\n    const saveState = () => {\n      const state = transform(map, store.getState());\n      const subset = whitelist\n        ? _.omit(_.pick(state, whitelist), blacklist)\n        : _.omit(state, blacklist);\n\n      const appliedMigrations = migrations\n        ? migrations.filter(migration => migration.up && migration.name).map(migration => migration.name)\n        : undefined; // eslint-disable-line no-undefined\n\n      storage.setItem(key, serialize({\n        persistedState: subset,\n        saveDate: moment().valueOf(),\n        migrations: appliedMigrations,\n      }));\n    };\n\n    const throttledSubscribe = _.throttle(saveState, throttle, {\n      trailing: true,\n    });\n    store.subscribe(throttle > 0 ? throttledSubscribe : saveState);\n    return store;\n  });\n}\n\n/**\n * Enhancer\n *\n * @export\n * @param {function} next callback\n * @return {function} enhancer\n */\nexport const autoRehydrate = next => (reducer, initialState, enhancer) => {\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined; // eslint-disable-line no-undefined\n  }\n  function rehydrateReducer(state, action) {\n    if (action.type === REHYDRATE) {\n      return reducer(_.merge({}, state, action.payload), action);\n    }\n    return reducer(state, action);\n  }\n  return next(rehydrateReducer, initialState, enhancer);\n};\n"],"names":["REHYDRATE","transform","map","state","result","_","forEach","value","key","transformation","get","targetKey","has","set","targetValue","sourceValue","merge","getNumberOfAppliedMigrations","appliedMigrations","migrationsToApply","reduce","migrationName","index","isDifferent","name","getMigrationsToRun","migrations","filter","migration","up","numberOfAppliedMigrations","migrationsToRevert","slice","reverse","find","down","migrationsToRun","concat","persistStore","store","whitelist","blacklist","storage","window","localStorage","expireDate","serialize","JSON","stringify","deserialize","parse","disabled","throttle","Promise","resolve","getItem","then","persistedJson","persistedValue","persistedState","saveDate","moment","add","isBefore","persistedStateToMerge","omit","pick","dispatch","type","payload","saveState","getState","subset","undefined","setItem","valueOf","throttledSubscribe","trailing","subscribe","autoRehydrate","next","reducer","initialState","enhancer","rehydrateReducer","action"],"mappings":"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"}