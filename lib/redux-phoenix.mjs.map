{"version":3,"file":"redux-phoenix.mjs","sources":["../src/reduxPhoenix.js"],"sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nexport const REHYDRATE = '@@REHYDRATE';\n\n/**\n * transform state according to passed transformation\n *\n * @param {object} map transformation\n * @param {object} state State from redux\n * @return {object} Transformed state\n */\nfunction transform(map, state) {\n  const result = {};\n  _.forEach(map, (value, key) => {\n    if (typeof value === 'function') {\n      const transformation = value(key, _.get(state, key), state);\n      if (transformation.targetKey && _.has(transformation, 'targetValue')) {\n        _.set(result, transformation.targetKey, transformation.targetValue);\n      }\n      if (_.has(transformation, 'sourceValue')) {\n        _.set(result, key, transformation.sourceValue);\n      }\n    } else {\n      _.set(result, value, _.get(state, key));\n    }\n  });\n  return _.merge({}, state, result);\n}\n\n/**\n * Persist store\n *\n * @export\n * @param {object} store Redux Store\n * @param {object} config Configuration object\n * @return {Promise<object>} Persisted Store\n */\nexport default function persistStore(store, {\n  key = 'redux',\n  whitelist = null,\n  blacklist = null,\n  storage = window.localStorage,\n  expireDate = null,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  map = {},\n  disabled = false,\n} = {}) {\n  return Promise.resolve(storage.getItem(key)).then(persistedJson => {\n    if (disabled) {\n      return store;\n    }\n    const persistedValue = deserialize(persistedJson);\n    const { persistedState, saveDate } = persistedValue || {};\n    let state = persistedState;\n    if (expireDate && moment(saveDate).add(...expireDate).isBefore(moment())) {\n      state = {};\n    }\n    const persistedStateToMerge = whitelist\n      ? _.omit(_.pick(state, whitelist), blacklist)\n      : _.omit(state, blacklist);\n\n    store.dispatch({\n      type: REHYDRATE,\n      payload: persistedStateToMerge,\n    });\n\n    store.subscribe(function() {\n      const state = transform(map, store.getState());\n      const subset = whitelist\n        ? _.omit(_.pick(state, whitelist), blacklist)\n        : _.omit(state, blacklist);\n\n        storage.setItem(key, serialize({ persistedState: subset, saveDate: moment().valueOf() }));\n    });\n    return store;\n  });\n}\n\n/**\n * Enhancer\n *\n * @export\n * @param {function} next callback\n * @return {function} enhancer\n */\nexport const autoRehydrate = next => (reducer, initialState, enhancer) => {\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined; // eslint-disable-line no-undefined\n  }\n  function rehydrateReducer(state, action) {\n    if (action.type === REHYDRATE) {\n      return reducer(_.merge({}, state, action.payload), action);\n    }\n    return reducer(state, action);\n  }\n  return next(rehydrateReducer, initialState, enhancer);\n};\n"],"names":["REHYDRATE","transform","map","state","result","forEach","value","key","transformation","_","get","targetKey","has","set","targetValue","sourceValue","merge","persistStore","store","whitelist","blacklist","storage","window","localStorage","expireDate","serialize","JSON","stringify","deserialize","parse","disabled","Promise","resolve","getItem","then","persistedValue","persistedJson","persistedState","saveDate","add","isBefore","moment","persistedStateToMerge","omit","pick","dispatch","subscribe","getState","subset","setItem","valueOf","autoRehydrate","reducer","initialState","enhancer","undefined","rehydrateReducer","action","type","payload","next"],"mappings":"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"}